/* eslint no-magic-numbers: 0 */
'use strict';

module.exports = {
  'accessor-pairs': ['error', { getWithoutSet: true }],
  'array-bracket-newline': ['error', { multiline: true }],
  'array-bracket-spacing': ['error', 'never'],
  'array-callback-return': 'error',
  'array-element-newline': 0,
  'arrow-body-style': 0,
  'arrow-parens': ['error', 'always'],
  'arrow-spacing': 'error',
  'block-scoped-var': 'error',
  'block-spacing': 'error',
  'brace-style': ['error', '1tbs'],
  'callback-return': 'error',
  camelcase: 'error',
  'capitalized-comments': 0,
  'class-methods-use-this': 'error',
  'comma-dangle': ['error', 'always-multiline'],
  'comma-spacing': 'error',
  'comma-style': ['error', 'last'],
  complexity: 0,
  'computed-property-spacing': ['error', 'never'],
  'consistent-return': 'error',
  'consistent-this': 0,
  'constructor-super': 'error',
  curly: ['error', 'all'],
  'default-case': 'error',
  'dot-location': ['error', 'property'],
  'dot-notation': 'error',
  'eol-last': ['error', 'always'],
  eqeqeq: ['error', 'always'],
  'for-direction': 'error',
  'func-call-spacing': ['error', 'never'],
  'func-name-matching': 0,
  'func-names': ['error', 'never'],
  'func-style': ['error', 'expression', { allowArrowFunctions: true }],
  'function-paren-newline': ['error', 'never'],
  'generator-star-spacing': ['error', { after: true, before: false }],
  'getter-return': 'error',
  'global-require': 'error',
  'guard-for-in': 'error',
  'handle-callback-err': ['error', '^(err(or)?|.*Error)$'],
  'id-blacklist': 0,
  'id-length': 0,
  'id-match': 0,
  'implicit-arrow-linebreak': ['error', 'beside'],
  indent: ['error', 2, { SwitchCase: 1 }],
  'init-declarations': 0,
  'jsx-quotes': ['error', 'prefer-single'],
  'key-spacing': 'error',
  'keyword-spacing': 'error',
  'line-comment-position': 0,
  'linebreak-style': ['error', 'unix'],
  'lines-around-comment': 0,
  'lines-between-class-members': ['error', 'never'],
  'max-depth': 0,
  'max-len': ['error', { code: 100, tabWidth: 2 }],
  'max-lines': 0,
  'max-nested-callbacks': 0,
  'max-params': 0,
  'max-statements': 0,
  'max-statements-per-line': 0,
  'multiline-comment-style': 0,
  'multiline-ternary': ['error', 'always-multiline'],
  'new-cap': 'error',
  'new-parens': 'error',
  'newline-per-chained-call': 0,
  'no-alert': 'error',
  'no-array-constructor': 'error',
  'no-await-in-loop': 'error',
  'no-bitwise': 'error',
  'no-buffer-constructor': 'error',
  'no-caller': 'error',
  'no-case-declarations': 'error',
  'no-catch-shadow': 'error',
  'no-class-assign': 'error',
  'no-compare-neg-zero': 'error',
  'no-cond-assign': 'error',
  'no-confusing-arrow': 0,
  'no-console': ['error', { allow: ['info', 'warn', 'error'] }],
  'no-const-assign': 'error',
  'no-constant-condition': 'error',
  'no-continue': 0,
  'no-control-regex': 'error',
  'no-debugger': 'error',
  'no-delete-var': 'error',
  'no-div-regex': 0,
  'no-dupe-args': 'error',
  'no-dupe-class-members': 'error',
  'no-dupe-keys': 'error',
  'no-duplicate-case': 'error',
  'no-duplicate-imports': 'error',
  'no-else-return': 0,
  'no-empty': 'error',
  'no-empty-character-class': 'error',
  'no-empty-function': 'error',
  'no-empty-pattern': 'error',
  'no-eq-null': 'error',
  'no-eval': 'error',
  'no-ex-assign': 'error',
  'no-extend-native': 'error',
  'no-extra-bind': 'error',
  'no-extra-boolean-cast': 'error',
  'no-extra-label': 'error',
  'no-extra-parens': 0,
  'no-extra-semi': 'error',
  'no-fallthrough': 'error',
  'no-floating-decimal': 'error',
  'no-func-assign': 'error',
  'no-global-assign': 'error',
  'no-implicit-coercion': 'error',
  'no-implicit-globals': 'error',
  'no-implied-eval': 'error',
  'no-inline-comments': 0,
  'no-inner-declarations': 'error',
  'no-invalid-regexp': 'error',
  'no-invalid-this': 'error',
  'no-irregular-whitespace': 'error',
  'no-iterator': 'error',
  'no-label-var': 'error',
  'no-labels': 'error',
  'no-lone-blocks': 'error',
  'no-lonely-if': 'error',
  'no-loop-func': 'error',
  'no-magic-numbers': ['error', { detectObjects: true, enforceConst: true }],
  'no-mixed-operators': 'error',
  'no-mixed-requires': 'error',
  'no-mixed-spaces-and-tabs': 'error',
  'no-multi-assign': 0,
  'no-multi-spaces': 'error',
  'no-multi-str': 'error',
  'no-multiple-empty-lines': ['error', { max: 1 }],
  'no-negated-condition': 'error',
  'no-nested-ternary': 'error',
  'no-new': 'error',
  'no-new-func': 'error',
  'no-new-object': 'error',
  'no-new-require': 'error',
  'no-new-symbol': 'error',
  'no-new-wrappers': 'error',
  'no-obj-calls': 'error',
  'no-octal': 'error',
  'no-octal-escape': 'error',
  'no-param-reassign': 'error',
  'no-path-concat': 'error',
  'no-plusplus': 0,
  'no-process-env': 'error',
  'no-process-exit': 'error',
  'no-proto': 'error',
  'no-prototype-builtins': 'error',
  'no-redeclare': 'error',
  'no-regex-spaces': 'error',
  'no-restricted-globals': 0,
  'no-restricted-imports': 0,
  'no-restricted-modules': 0,
  'no-restricted-properties': 0,
  'no-restricted-syntax': 0,
  'no-return-assign': 'error',
  'no-return-await': 'error',
  'no-script-url': 'error',
  'no-self-assign': 'error',
  'no-self-compare': 'error',
  'no-sequences': 'error',
  'no-shadow': 'error',
  'no-shadow-restricted-names': 'error',
  'no-sparse-arrays': 'error',
  'no-sync': 'error',
  'no-tabs': 'error',
  'no-template-curly-in-string': 'error',
  'no-ternary': 0,
  'no-this-before-super': 'error',
  'no-throw-literal': 'error',
  'no-trailing-spaces': 'error',
  'no-undef': 'error',
  'no-undef-init': 'error',
  'no-undefined': 0,
  'no-underscore-dangle': 'error',
  'no-unexpected-multiline': 'error',
  'no-unmodified-loop-condition': 'error',
  'no-unneeded-ternary': 'error',
  'no-unreachable': 'error',
  'no-unsafe-finally': 'error',
  'no-unsafe-negation': 'error',
  'no-unused-expressions': 'error',
  'no-unused-labels': 'error',
  'no-unused-vars': ['error', { args: 'all', argsIgnorePattern: '^_' }],
  'no-use-before-define': 'error',
  'no-useless-call': 'error',
  'no-useless-computed-key': 'error',
  'no-useless-concat': 'error',
  'no-useless-constructor': 'error',
  'no-useless-escape': 'error',
  'no-useless-rename': 'error',
  'no-useless-return': 'error',
  'no-var': 'error',
  'no-void': 'error',
  'no-warning-comments': ['error', { location: 'start', terms: ['fixme'] }],
  'no-whitespace-before-property': 'error',
  'no-with': 'error',
  'nonblock-statement-body-position': 'error',

  /*
    TODO: Figure out how to disallow this:
    {
      same: 'line', multiple: 'props',
    }
    while allowing this:
    {
      singleProp: 'but with newlines',
    }
  */
  'object-curly-newline': ['error', { consistent: true, multiline: true }],

  'object-curly-spacing': ['error', 'always'],
  'object-property-newline': 0,
  'object-shorthand': 'error',
  'one-var': ['error', { initialized: 'never', uninitialized: 'always' }],
  'one-var-declaration-per-line': ['error', 'initializations'],
  'operator-assignment': ['error', 'always'],
  'operator-linebreak': ['error', 'after'],
  'padded-blocks': 0,
  'padding-line-between-statements': 0,
  'prefer-arrow-callback': 'error',
  'prefer-const': 'error',
  'prefer-destructuring': [
    'error',
    { array: false, object: true },
    { enforceForRenamedProperties: false },
  ],
  'prefer-numeric-literals': 'error',
  'prefer-promise-reject-errors': 'error',
  'prefer-rest-params': 'error',
  'prefer-spread': 'error',
  'prefer-template': 'error',
  'quote-props': ['error', 'as-needed'],
  quotes: ['error', 'single', { avoidEscape: true }],
  radix: 'error',
  'require-await': 'error',
  'require-jsdoc': 0,
  'require-yield': 'error',
  'rest-spread-spacing': ['error', 'never'],
  semi: ['error', 'always', { omitLastInOneLineBlock: false }],
  'semi-spacing': 'error',
  'semi-style': 'error',

  // TODO: Enable this when you can sort purely by right-hand indentifier
  'sort-imports': 0,

  'sort-keys': ['error', 'asc', { caseSensitive: false, natural: true }],
  'sort-vars': ['error', { ignoreCase: true }],
  'space-before-blocks': 0,
  'space-before-function-paren': ['error', 'never'],
  'space-in-parens': ['error', 'never'],
  'space-infix-ops': 'error',
  'space-unary-ops': 'error',
  'spaced-comment': ['error', 'always'],
  strict: 'error',
  'switch-colon-spacing': 'error',
  'symbol-description': 'error',
  'template-curly-spacing': ['error', 'never'],
  'template-tag-spacing': ['error', 'never'],
  'unicode-bom': 'error',
  'use-isnan': 'error',
  'valid-jsdoc': 'error',
  'valid-typeof': ['error', { requireStringLiterals: true }],
  'vars-on-top': 0,
  'wrap-iife': 'error',
  'wrap-regex': 0,
  'yield-star-spacing': ['error', 'after'],
  yoda: 0,
};
